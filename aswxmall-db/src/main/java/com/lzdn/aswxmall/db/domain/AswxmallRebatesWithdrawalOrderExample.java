package com.lzdn.aswxmall.db.domain;

import java.math.BigDecimal;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;

public class AswxmallRebatesWithdrawalOrderExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public AswxmallRebatesWithdrawalOrderExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public AswxmallRebatesWithdrawalOrderExample orderBy(String orderByClause) {
        this.setOrderByClause(orderByClause);
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public AswxmallRebatesWithdrawalOrderExample orderBy(String ... orderByClauses) {
        StringBuffer sb = new StringBuffer();
        for (int i = 0; i < orderByClauses.length; i++) {
            sb.append(orderByClauses[i]);
            if (i < orderByClauses.length - 1) {
                sb.append(" , ");
            }
        }
        this.setOrderByClause(sb.toString());
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria(this);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public static Criteria newAndCreateCriteria() {
        AswxmallRebatesWithdrawalOrderExample example = new AswxmallRebatesWithdrawalOrderExample();
        return example.createCriteria();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public AswxmallRebatesWithdrawalOrderExample when(boolean condition, IExampleWhen then) {
        if (condition) {
            then.example(this);
        }
        return this;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public AswxmallRebatesWithdrawalOrderExample when(boolean condition, IExampleWhen then, IExampleWhen otherwise) {
        if (condition) {
            then.example(this);
        } else {
            otherwise.example(this);
        }
        return this;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andIdEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andIdNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andIdGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andIdLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNull() {
            addCriterion("user_id is null");
            return (Criteria) this;
        }

        public Criteria andUserIdIsNotNull() {
            addCriterion("user_id is not null");
            return (Criteria) this;
        }

        public Criteria andUserIdEqualTo(Integer value) {
            addCriterion("user_id =", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("user_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdNotEqualTo(Integer value) {
            addCriterion("user_id <>", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("user_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThan(Integer value) {
            addCriterion("user_id >", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("user_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("user_id >=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("user_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThan(Integer value) {
            addCriterion("user_id <", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("user_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdLessThanOrEqualTo(Integer value) {
            addCriterion("user_id <=", value, "userId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andUserIdLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("user_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andUserIdIn(List<Integer> values) {
            addCriterion("user_id in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotIn(List<Integer> values) {
            addCriterion("user_id not in", values, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdBetween(Integer value1, Integer value2) {
            addCriterion("user_id between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andUserIdNotBetween(Integer value1, Integer value2) {
            addCriterion("user_id not between", value1, value2, "userId");
            return (Criteria) this;
        }

        public Criteria andBeforeAmountIsNull() {
            addCriterion("before_amount is null");
            return (Criteria) this;
        }

        public Criteria andBeforeAmountIsNotNull() {
            addCriterion("before_amount is not null");
            return (Criteria) this;
        }

        public Criteria andBeforeAmountEqualTo(BigDecimal value) {
            addCriterion("before_amount =", value, "beforeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBeforeAmountEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("before_amount = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBeforeAmountNotEqualTo(BigDecimal value) {
            addCriterion("before_amount <>", value, "beforeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBeforeAmountNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("before_amount <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBeforeAmountGreaterThan(BigDecimal value) {
            addCriterion("before_amount >", value, "beforeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBeforeAmountGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("before_amount > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBeforeAmountGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("before_amount >=", value, "beforeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBeforeAmountGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("before_amount >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBeforeAmountLessThan(BigDecimal value) {
            addCriterion("before_amount <", value, "beforeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBeforeAmountLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("before_amount < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBeforeAmountLessThanOrEqualTo(BigDecimal value) {
            addCriterion("before_amount <=", value, "beforeAmount");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBeforeAmountLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("before_amount <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBeforeAmountIn(List<BigDecimal> values) {
            addCriterion("before_amount in", values, "beforeAmount");
            return (Criteria) this;
        }

        public Criteria andBeforeAmountNotIn(List<BigDecimal> values) {
            addCriterion("before_amount not in", values, "beforeAmount");
            return (Criteria) this;
        }

        public Criteria andBeforeAmountBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("before_amount between", value1, value2, "beforeAmount");
            return (Criteria) this;
        }

        public Criteria andBeforeAmountNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("before_amount not between", value1, value2, "beforeAmount");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyIsNull() {
            addCriterion("withdraw_money is null");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyIsNotNull() {
            addCriterion("withdraw_money is not null");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyEqualTo(BigDecimal value) {
            addCriterion("withdraw_money =", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_money = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyNotEqualTo(BigDecimal value) {
            addCriterion("withdraw_money <>", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_money <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyGreaterThan(BigDecimal value) {
            addCriterion("withdraw_money >", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_money > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("withdraw_money >=", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_money >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyLessThan(BigDecimal value) {
            addCriterion("withdraw_money <", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_money < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyLessThanOrEqualTo(BigDecimal value) {
            addCriterion("withdraw_money <=", value, "withdrawMoney");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawMoneyLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_money <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyIn(List<BigDecimal> values) {
            addCriterion("withdraw_money in", values, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyNotIn(List<BigDecimal> values) {
            addCriterion("withdraw_money not in", values, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("withdraw_money between", value1, value2, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andWithdrawMoneyNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("withdraw_money not between", value1, value2, "withdrawMoney");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNull() {
            addCriterion("balance is null");
            return (Criteria) this;
        }

        public Criteria andBalanceIsNotNull() {
            addCriterion("balance is not null");
            return (Criteria) this;
        }

        public Criteria andBalanceEqualTo(BigDecimal value) {
            addCriterion("balance =", value, "balance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBalanceEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("balance = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBalanceNotEqualTo(BigDecimal value) {
            addCriterion("balance <>", value, "balance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBalanceNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("balance <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThan(BigDecimal value) {
            addCriterion("balance >", value, "balance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBalanceGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("balance > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBalanceGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("balance >=", value, "balance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBalanceGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("balance >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBalanceLessThan(BigDecimal value) {
            addCriterion("balance <", value, "balance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBalanceLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("balance < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBalanceLessThanOrEqualTo(BigDecimal value) {
            addCriterion("balance <=", value, "balance");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andBalanceLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("balance <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andBalanceIn(List<BigDecimal> values) {
            addCriterion("balance in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotIn(List<BigDecimal> values) {
            addCriterion("balance not in", values, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("balance between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andBalanceNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("balance not between", value1, value2, "balance");
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeIsNull() {
            addCriterion("withdraw_time is null");
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeIsNotNull() {
            addCriterion("withdraw_time is not null");
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeEqualTo(LocalDateTime value) {
            addCriterion("withdraw_time =", value, "withdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawTimeEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeNotEqualTo(LocalDateTime value) {
            addCriterion("withdraw_time <>", value, "withdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawTimeNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeGreaterThan(LocalDateTime value) {
            addCriterion("withdraw_time >", value, "withdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawTimeGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("withdraw_time >=", value, "withdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawTimeGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeLessThan(LocalDateTime value) {
            addCriterion("withdraw_time <", value, "withdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawTimeLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("withdraw_time <=", value, "withdrawTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andWithdrawTimeLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("withdraw_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeIn(List<LocalDateTime> values) {
            addCriterion("withdraw_time in", values, "withdrawTime");
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeNotIn(List<LocalDateTime> values) {
            addCriterion("withdraw_time not in", values, "withdrawTime");
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("withdraw_time between", value1, value2, "withdrawTime");
            return (Criteria) this;
        }

        public Criteria andWithdrawTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("withdraw_time not between", value1, value2, "withdrawTime");
            return (Criteria) this;
        }

        public Criteria andActionIpIsNull() {
            addCriterion("action_ip is null");
            return (Criteria) this;
        }

        public Criteria andActionIpIsNotNull() {
            addCriterion("action_ip is not null");
            return (Criteria) this;
        }

        public Criteria andActionIpEqualTo(String value) {
            addCriterion("action_ip =", value, "actionIp");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionIpEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_ip = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionIpNotEqualTo(String value) {
            addCriterion("action_ip <>", value, "actionIp");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionIpNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_ip <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionIpGreaterThan(String value) {
            addCriterion("action_ip >", value, "actionIp");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionIpGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_ip > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionIpGreaterThanOrEqualTo(String value) {
            addCriterion("action_ip >=", value, "actionIp");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionIpGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_ip >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionIpLessThan(String value) {
            addCriterion("action_ip <", value, "actionIp");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionIpLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_ip < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionIpLessThanOrEqualTo(String value) {
            addCriterion("action_ip <=", value, "actionIp");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionIpLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_ip <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionIpLike(String value) {
            addCriterion("action_ip like", value, "actionIp");
            return (Criteria) this;
        }

        public Criteria andActionIpNotLike(String value) {
            addCriterion("action_ip not like", value, "actionIp");
            return (Criteria) this;
        }

        public Criteria andActionIpIn(List<String> values) {
            addCriterion("action_ip in", values, "actionIp");
            return (Criteria) this;
        }

        public Criteria andActionIpNotIn(List<String> values) {
            addCriterion("action_ip not in", values, "actionIp");
            return (Criteria) this;
        }

        public Criteria andActionIpBetween(String value1, String value2) {
            addCriterion("action_ip between", value1, value2, "actionIp");
            return (Criteria) this;
        }

        public Criteria andActionIpNotBetween(String value1, String value2) {
            addCriterion("action_ip not between", value1, value2, "actionIp");
            return (Criteria) this;
        }

        public Criteria andActionClientIsNull() {
            addCriterion("action_client is null");
            return (Criteria) this;
        }

        public Criteria andActionClientIsNotNull() {
            addCriterion("action_client is not null");
            return (Criteria) this;
        }

        public Criteria andActionClientEqualTo(String value) {
            addCriterion("action_client =", value, "actionClient");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionClientEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_client = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionClientNotEqualTo(String value) {
            addCriterion("action_client <>", value, "actionClient");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionClientNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_client <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionClientGreaterThan(String value) {
            addCriterion("action_client >", value, "actionClient");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionClientGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_client > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionClientGreaterThanOrEqualTo(String value) {
            addCriterion("action_client >=", value, "actionClient");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionClientGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_client >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionClientLessThan(String value) {
            addCriterion("action_client <", value, "actionClient");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionClientLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_client < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionClientLessThanOrEqualTo(String value) {
            addCriterion("action_client <=", value, "actionClient");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andActionClientLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("action_client <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andActionClientLike(String value) {
            addCriterion("action_client like", value, "actionClient");
            return (Criteria) this;
        }

        public Criteria andActionClientNotLike(String value) {
            addCriterion("action_client not like", value, "actionClient");
            return (Criteria) this;
        }

        public Criteria andActionClientIn(List<String> values) {
            addCriterion("action_client in", values, "actionClient");
            return (Criteria) this;
        }

        public Criteria andActionClientNotIn(List<String> values) {
            addCriterion("action_client not in", values, "actionClient");
            return (Criteria) this;
        }

        public Criteria andActionClientBetween(String value1, String value2) {
            addCriterion("action_client between", value1, value2, "actionClient");
            return (Criteria) this;
        }

        public Criteria andActionClientNotBetween(String value1, String value2) {
            addCriterion("action_client not between", value1, value2, "actionClient");
            return (Criteria) this;
        }

        public Criteria andStatusIsNull() {
            addCriterion("`status` is null");
            return (Criteria) this;
        }

        public Criteria andStatusIsNotNull() {
            addCriterion("`status` is not null");
            return (Criteria) this;
        }

        public Criteria andStatusEqualTo(Short value) {
            addCriterion("`status` =", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andStatusEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("`status` = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusNotEqualTo(Short value) {
            addCriterion("`status` <>", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andStatusNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("`status` <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThan(Short value) {
            addCriterion("`status` >", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("`status` > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusGreaterThanOrEqualTo(Short value) {
            addCriterion("`status` >=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andStatusGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("`status` >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThan(Short value) {
            addCriterion("`status` <", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("`status` < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusLessThanOrEqualTo(Short value) {
            addCriterion("`status` <=", value, "status");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andStatusLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("`status` <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andStatusIn(List<Short> values) {
            addCriterion("`status` in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotIn(List<Short> values) {
            addCriterion("`status` not in", values, "status");
            return (Criteria) this;
        }

        public Criteria andStatusBetween(Short value1, Short value2) {
            addCriterion("`status` between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andStatusNotBetween(Short value1, Short value2) {
            addCriterion("`status` not between", value1, value2, "status");
            return (Criteria) this;
        }

        public Criteria andAdminIdIsNull() {
            addCriterion("admin_id is null");
            return (Criteria) this;
        }

        public Criteria andAdminIdIsNotNull() {
            addCriterion("admin_id is not null");
            return (Criteria) this;
        }

        public Criteria andAdminIdEqualTo(Integer value) {
            addCriterion("admin_id =", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andAdminIdEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("admin_id = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdNotEqualTo(Integer value) {
            addCriterion("admin_id <>", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andAdminIdNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("admin_id <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdGreaterThan(Integer value) {
            addCriterion("admin_id >", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andAdminIdGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("admin_id > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("admin_id >=", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andAdminIdGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("admin_id >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdLessThan(Integer value) {
            addCriterion("admin_id <", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andAdminIdLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("admin_id < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdLessThanOrEqualTo(Integer value) {
            addCriterion("admin_id <=", value, "adminId");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andAdminIdLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("admin_id <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andAdminIdIn(List<Integer> values) {
            addCriterion("admin_id in", values, "adminId");
            return (Criteria) this;
        }

        public Criteria andAdminIdNotIn(List<Integer> values) {
            addCriterion("admin_id not in", values, "adminId");
            return (Criteria) this;
        }

        public Criteria andAdminIdBetween(Integer value1, Integer value2) {
            addCriterion("admin_id between", value1, value2, "adminId");
            return (Criteria) this;
        }

        public Criteria andAdminIdNotBetween(Integer value1, Integer value2) {
            addCriterion("admin_id not between", value1, value2, "adminId");
            return (Criteria) this;
        }

        public Criteria andApproveTimeIsNull() {
            addCriterion("approve_time is null");
            return (Criteria) this;
        }

        public Criteria andApproveTimeIsNotNull() {
            addCriterion("approve_time is not null");
            return (Criteria) this;
        }

        public Criteria andApproveTimeEqualTo(LocalDateTime value) {
            addCriterion("approve_time =", value, "approveTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andApproveTimeEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("approve_time = ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveTimeNotEqualTo(LocalDateTime value) {
            addCriterion("approve_time <>", value, "approveTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andApproveTimeNotEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("approve_time <> ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveTimeGreaterThan(LocalDateTime value) {
            addCriterion("approve_time >", value, "approveTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andApproveTimeGreaterThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("approve_time > ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveTimeGreaterThanOrEqualTo(LocalDateTime value) {
            addCriterion("approve_time >=", value, "approveTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andApproveTimeGreaterThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("approve_time >= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveTimeLessThan(LocalDateTime value) {
            addCriterion("approve_time <", value, "approveTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andApproveTimeLessThanColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("approve_time < ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveTimeLessThanOrEqualTo(LocalDateTime value) {
            addCriterion("approve_time <=", value, "approveTime");
            return (Criteria) this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria andApproveTimeLessThanOrEqualToColumn(AswxmallRebatesWithdrawalOrder.Column column) {
            addCriterion(new StringBuilder("approve_time <= ").append(column.getEscapedColumnName()).toString());
            return (Criteria) this;
        }

        public Criteria andApproveTimeIn(List<LocalDateTime> values) {
            addCriterion("approve_time in", values, "approveTime");
            return (Criteria) this;
        }

        public Criteria andApproveTimeNotIn(List<LocalDateTime> values) {
            addCriterion("approve_time not in", values, "approveTime");
            return (Criteria) this;
        }

        public Criteria andApproveTimeBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("approve_time between", value1, value2, "approveTime");
            return (Criteria) this;
        }

        public Criteria andApproveTimeNotBetween(LocalDateTime value1, LocalDateTime value2) {
            addCriterion("approve_time not between", value1, value2, "approveTime");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        /**
         * This field was generated by MyBatis Generator.
         * This field corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        private AswxmallRebatesWithdrawalOrderExample example;

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        protected Criteria(AswxmallRebatesWithdrawalOrderExample example) {
            super();
            this.example = example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public AswxmallRebatesWithdrawalOrderExample example() {
            return this.example;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        @Deprecated
        public Criteria andIf(boolean ifAdd, ICriteriaAdd add) {
            if (ifAdd) {
                add.add(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then) {
            if (condition) {
                then.criteria(this);
            }
            return this;
        }

        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        public Criteria when(boolean condition, ICriteriaWhen then, ICriteriaWhen otherwise) {
            if (condition) {
                then.criteria(this);
            } else {
                otherwise.criteria(this);
            }
            return this;
        }

        @Deprecated
        public interface ICriteriaAdd {
            /**
             * This method was generated by MyBatis Generator.
             * This method corresponds to the database table aswxmall_rebates_withdrawal_order
             *
             * @mbg.generated
             */
            Criteria add(Criteria add);
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table aswxmall_rebates_withdrawal_order
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }

    public interface ICriteriaWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        void criteria(Criteria criteria);
    }

    public interface IExampleWhen {
        /**
         * This method was generated by MyBatis Generator.
         * This method corresponds to the database table aswxmall_rebates_withdrawal_order
         *
         * @mbg.generated
         */
        void example(com.lzdn.aswxmall.db.domain.AswxmallRebatesWithdrawalOrderExample example);
    }
}